<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
state = e_state.idle;
dir = -1;
spd = 3;
grav = 0.2;
hspd = 0;
vspd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspd = dir * spd;
vspd += grav;

switch(state)
{
    case e_state.idle:
    {
        hspd = 0;
        vspd = (min(7,vspd+5));
        if (distance_to_object(obj_localplayer) &lt; 100) state = e_state.chase;
    }
    break;
    case e_state.chase:
    {
       dir = sign(obj_localplayer.x - x);
       hspd = dir *7;
       vspd = (min(7,vspd+5)); 
       if(distance_to_object(obj_localplayer) &gt; 128) state = e_state.idle;
    }
    break;

}
//Horizontal Collision
if (place_meeting(x+hspd,y,obj_block))
{
    while(!place_meeting(x+sign(hspd),y,obj_block))
    {
        x += sign(hspd);
    }
    hspd = 0;
    
    dir *= -1;
}
x += hspd;

//Vertical Collision
if (place_meeting(x,y+vspd,obj_block))
{
    while(!place_meeting(x,y+sign(vspd),obj_block))
    {
        y += sign(vspd);
    }
    vspd = 0;
}
y += vspd;

//Enemy Collision
if (place_meeting(x,y,obj_localplayer))
{
    if (obj_localplayer.y &lt; y)
    {
        with (obj_localplayer) vspd = -jspd;
        instance_destroy();
    }
    else
    {
        //scr_death();
        if(global.hp&gt;1)
        {
            global.hp--;
            x = xstart;
            y = ystart;
            if (global.checkpointR == room)
            {
                x = global.checkpointx;
                y = global.checkpointy;
            }
        }
        else
        {
            //tell the server we're leaving the game room
            buffer_seek(global.buffer, buffer_seek_start, 0);
            buffer_write(global.buffer, buffer_u8, 6);
            buffer_write(global.buffer, buffer_u32, global.playerId);
            network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));
            room_goto(rm_mainMenu);
            global.hp = 3;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
