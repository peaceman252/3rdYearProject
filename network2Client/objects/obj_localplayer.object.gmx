<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables
grav = 1;
spd = 10;
jspd = 15;
jspd_normal = 15;
jspd_power = 45;
hspd = 0;
hspd_carry = 0;
vspd = 0;
state = "standing";
dir = "right";
jumping = false;
falling = false;
fric = 1.3;
walkingAcc = 0.2;
walkingMaxSpd = spd/4;
runningAcc = 0.4;
runningMaxSpd = spd;
terminalVelocity = 50;
key_down = 0;
key_on = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jspd = jspd_normal;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_detectKey();
scr_groundCheck();
scr_jumpCheck();
scr_rightCheck();
scr_leftCheck();
scr_collisionCheck();
scr_standCheck();
scr_setSprite();
key_down = keyboard_check(vk_down);
var spriteNumber = 0;
switch (sprite_index)
{
    case spr_player_stand:
        spriteNumber = 1;
    break;
    
    case spr_player_jump:
        spriteNumber = 2;
    break;
    
    case spr_player_duck:
        spriteNumber = 3;
    break;
    
    case spr_player_walk:
        spriteNumber = 4;
    break;
    
    case spr_player_run:
        spriteNumber = 5;
    break;
}

var d = 0;
switch (dir)
{
    case "left":
        d = 1;
    break;
    
    case "right":
        d = 2;
    break;
}



//update coordinates
buffer_seek(global.buffer, buffer_seek_start, 0);
buffer_write(global.buffer, buffer_u8, 7);
buffer_write(global.buffer, buffer_u32, global.playerId);
buffer_write(global.buffer, buffer_f32, x);
buffer_write(global.buffer, buffer_f32, y);
buffer_write(global.buffer, buffer_u8, spriteNumber);
buffer_write(global.buffer, buffer_u8, image_index);
buffer_write(global.buffer, buffer_u8, d);
network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));

camera_movement_smothAF();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_locked">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.col == key_on)
{
    var key_col = key_on;
    var doorColour = 0;
    with (obj_locked)
    {
        if (key_col == col){ 
            instance_destroy();
            switch(col)
            {
                case c_green:
                    doorColour = 1;
                break;
            
                case c_blue:
                    doorColour = 2;
                break;
            
                case c_red:
                    doorColour = 3;
                break;
            
                case c_purple:
                    doorColour = 4;
                break;
            }
            buffer_seek(global.buffer, buffer_seek_start, 0);
            buffer_write(global.buffer, buffer_u8, 9);
            buffer_write(global.buffer, buffer_u8, doorColour);
            network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));
        }
    }
    with (obj_key)
    {
        if (key_col == col) instance_destroy();
    }
    key_on = c_white;
}
else
{
    x = xprevious;
    //y = yprevious;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platformV">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y += sin(other.angle) * other.angleMultiplier;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += cos(other.angle) * other.angleMultiplier;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = xstart;
y = ystart;
if (global.checkpointR == room)
{
    x = global.checkpointx;
    y = global.checkpointy;
}
if(global.hp&gt;1)
{
    global.hp--;
}
else
{
    //tell the server we're leaving the game room
    buffer_seek(global.buffer, buffer_seek_start, 0);
    buffer_write(global.buffer, buffer_u8, 6);
    buffer_write(global.buffer, buffer_u32, global.playerId);
    network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));
    room_goto(rm_mainMenu);
    global.hp = 3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tell the server we're leaving the game room
buffer_seek(global.buffer, buffer_seek_start, 0);
buffer_write(global.buffer, buffer_u8, 6);
buffer_write(global.buffer, buffer_u32, global.playerId);
network_send_packet(obj_controller.socket, global.buffer, buffer_tell(global.buffer));
global.hp = 3;  
room_goto(rm_mainMenu); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
