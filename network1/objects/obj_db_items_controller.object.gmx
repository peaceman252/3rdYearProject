<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//init database data parameters
table = "items";
column_names = db_table_column_names(table);
query = db_query_select(table,""); //prepare the query
results = -1;

//pagination
per_page = 13 //show 13 results per page
page = 1;
total_pages = 1;

//results are drawn to a surface
width = 672;
height = 480;
canvas = surface_create(width,height);

alarm[0] = 4; //perform the query at room start
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///execute query

//pagination
var total_records = db_query_calc(query,"count","",true);
total_pages = max(1,ceil(total_records / per_page));
page = min(total_pages,page);

//limit our results to the current page
db_cl_limit(query,per_page,(page-1)*per_page); 

//execute the query showing the elapsed time in the debug console
var start_time = current_time;
results = db_query_exec(query,true);
show_debug_message("Query execution: "+string(current_time-start_time) + "ms");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw results to surface

surface_set_target(canvas);

//draw column names
var cell_width = surface_get_width(canvas) / ds_list_size(column_names);
var cell_height = 32;

draw_clear_alpha(c_black,0.8);

//draw current page number
draw_set_color(c_white);
draw_set_font(fnt_db_bold);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text(width / 2,height-16,string(page)+"/"+string(total_pages));

//draw column names
draw_set_halign(fa_left);
for(var col=0;col&lt;ds_list_size(column_names);col+=1) {
    var xx = col*cell_width;
    draw_text(xx+4,cell_height/2,column_names[| col]);
}


//if there's at least one result, draw it
if(results &gt;= 0) {
    draw_set_font(fnt_db);

    for(var row=0;row&lt;ds_grid_height(results);row+=1) {
        for(var col=0;col&lt;ds_grid_width(results);col+=1) {
            var xx = col*cell_width;
            var yy = (row+1)*cell_height;
            draw_text(xx+4,yy+cell_height/2,string(results[# col,row]));
        }
    }

    //draw grid
    draw_set_color(c_dkgray);
    for(var row=1;row&lt;=ds_grid_height(results)+1;row+=1) {
        draw_line(0,cell_height*row-1,surface_get_width(canvas),cell_height*row-1);
    }
    
    //delete results grid, not needed anymore
    ds_grid_destroy(results);

}

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* 
    Free the query when switching to another demo.
*/
db_query_free(query);
surface_free(canvas);
ds_list_destroy(column_names);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_surface(canvas,x,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
