<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*  
    Create an inventory database table and add 30 random items 
    (taken from the items database demo).
*/

//create the table
db_table_create("inventory","item_id:real,quantity:real,favorite:real");

//select 30 random item ids
var items_query = db_query_select("items","id");
db_cl_sort(items_query,"RAND");
db_cl_limit(items_query,30,0);

var item_ids = db_query_exec(items_query);

if(item_ids &gt; -1) { //if the query returned any data
    for(var i=0;i&lt;ds_list_size(item_ids);i++) {
        db_record_create("inventory",item_ids[| i],irandom(19)+1,0);
    }
}

ds_list_destroy(item_ids);

//init database data parameters
table = "inventory";
query = db_query_select(table,"items.name,inventory.quantity,inventory.favorite,inventory.id"); //prepare the query
db_cl_join(query,"items","item_id");
results = -1;

//pagination
per_page = 14 //show 14 items per page
page = 1;
total_pages = 1;

//results are drawn to a surface
width = 672;
height = 480;
canvas = surface_create(width,height);

alarm[0] = 4; //perform the query at room start
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///execute query

//pagination
var total_records = db_query_calc(query,"count","",true);
total_pages = max(1,ceil(total_records / per_page));
page = min(total_pages,page);

//limit our results to the current page
db_cl_limit(query,per_page,(page-1)*per_page); 

//execute the query showing the elapsed time in the debug console
var start_time = current_time;
results = db_query_exec(query,true);
show_debug_message("Query execution: "+string(current_time-start_time) + "ms");

with(obj_db_inventory_btn) {
    if(action == 2) {instance_destroy();} //destroy all favorite buttons
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw results to surface

surface_set_target(canvas);

draw_clear_alpha(c_black,0.8);

var item_height = 32; //each item has height 32 in the list

//draw current page number
draw_set_color(c_white);
draw_set_font(fnt_db_bold);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_text(width / 2,height-16,string(page)+"/"+string(total_pages));

//if there's at least one result, draw it
if(results &gt;= 0) {
    draw_set_font(fnt_db);
    draw_set_halign(fa_left);

    for(var row=0;row&lt;ds_grid_height(results);row+=1) {
        var yy = row*item_height+item_height/2;
        draw_text(48,yy,string(results[# 0,row]));
        draw_text(width-32,yy,string(results[# 1,row]));
        
        var btn = instance_create(x,row*item_height,obj_db_inventory_btn);
        btn.icon = results[# 2,row];
        btn.action = 2;
        btn.inv_id = results[# 3,row];
    }

    //draw grid
    draw_set_color(c_dkgray);
    for(var row=1;row&lt;=ds_grid_height(results);row+=1) {
        draw_line(0,item_height*row,surface_get_width(canvas),item_height*row);
    } 
    
    //delete results grid, not needed anymore
    ds_grid_destroy(results);

}

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* 
    Free the query when switching to another demo.
*/
db_query_free(query);
surface_free(canvas);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_surface(canvas,x,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
